<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Inheritance on Life Beyond Rails</title>
    <link>http://life.beyondrails.com/categories/inheritance/index.xml</link>
    <description>Recent content in Inheritance on Life Beyond Rails</description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="http://life.beyondrails.com/categories/inheritance/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A Strange Case of Inheritance Behavior</title>
      <link>http://life.beyondrails.com/blog/2016/04/14/a-strange-case-of-inheritance-behavior/</link>
      <pubDate>Thu, 14 Apr 2016 20:27:59 +0800</pubDate>
      
      <guid>http://life.beyondrails.com/blog/2016/04/14/a-strange-case-of-inheritance-behavior/</guid>
      <description>&lt;p&gt;While working some code to work with the Zuora SOAP API, I got bit by a strange case of inheritance behavior. It would seem that this is related to what &lt;code&gt;self&lt;/code&gt; is bound to during the execution of the statement. Here it is, distilled to its essentials:

&lt;script&gt;
$(function() {
    $(&#39;.ruby-code&#39;).opalBox();
  var $targets = $(&#34;.ruby-code textarea&#34;)
  $targets.each(function() {
    $(this).height(0).height(this.scrollHeight - $(this).css(&#34;font-size&#34;).replace(&#39;px&#39;,&#39;&#39;)).change();
  })
});
&lt;/script&gt;
&lt;/p&gt;

&lt;div class=&#34;ruby-code&#34;&gt;
class Parent
  def self.foo
    &#34;parent foo&#34;
  end

  def self.bar
    puts &#34;parent bar&#34;
    puts self.foo
  end
end

class Child &lt; Parent
  def self.foo
    puts &#34;child foo&#34;
  end

  def self.bar
    puts &#34;child bar&#34;
    super
  end
end

puts Child.bar
&lt;/div&gt;

&lt;p&gt;Intuition will tell you that when you call &lt;code&gt;Child.bar&lt;/code&gt;, since the method called &lt;code&gt;super&lt;/code&gt; you would remain in the &lt;code&gt;Parent&lt;/code&gt; context. So when the &lt;code&gt;Parent.bar&lt;/code&gt; method called &lt;code&gt;self.foo&lt;/code&gt; you would expect it to be kept in the same context.&lt;/p&gt;

&lt;p&gt;This is in fact not the case; it is as if the binding of &lt;code&gt;self&lt;/code&gt; remains with the &lt;code&gt;Child&lt;/code&gt; class, that is why even if the &lt;code&gt;self.foo&lt;/code&gt; was called in the &lt;code&gt;Parent&lt;/code&gt; class the &lt;code&gt;Child.foo&lt;/code&gt; was called instead.&lt;/p&gt;

&lt;p&gt;I asked my colleague &lt;a href=&#34;http://aaronmyatt.github.io/&#34;&gt;Aaron&lt;/a&gt; who was once a Python programmer to give me an equivalent Python code to run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Parent(object):
	def foo(self):
		print(&amp;quot;Parent foo&amp;quot;)
	def bar(self):
		print(&amp;quot;Parent bar&amp;quot;)
		return self.foo()

â€‹class Child(Parent):
	def foo(self):
		print(&amp;quot;Child foo&amp;quot;)
	def bar(self):
		print(&amp;quot;Child bar&amp;quot;)
		return super(Child, self).bar()

c = Child()
print(c.bar())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the output was the same:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Child bar
Parent bar
Child foo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m not an expert Javascript programmer so I&amp;rsquo;m curious how an equivalent program would behave under Javascript.&lt;/p&gt;

&lt;h3 id=&#34;update&#34;&gt;Update:&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/noob.kido&#34;&gt;Lee Siong Tai&lt;/a&gt; kindly provided me a fiddle here: &lt;a href=&#34;http://www.es6fiddle.net/in0c3zsi/&#34;&gt;http://www.es6fiddle.net/in0c3zsi/&lt;/a&gt; and interestingly, it shows the same behavior.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/jimmyngu&#34;&gt;Jimmy Ngu&lt;/a&gt; also has some interesting links, go check out our discussion at &lt;a href=&#34;https://www.facebook.com/groups/klxrb/permalink/792231597575468/&#34;&gt;https://www.facebook.com/groups/klxrb/permalink/792231597575468/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>