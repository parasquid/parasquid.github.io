<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on Life Beyond Rails</title>
    <link>http://life.beyondrails.com/categories/windows/index.xml</link>
    <description>Recent content in Windows on Life Beyond Rails</description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="http://life.beyondrails.com/categories/windows/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ruby Development in Windows Revisited</title>
      <link>http://life.beyondrails.com/blog/2015/11/07/ruby-development-in-windows-revisited/</link>
      <pubDate>Sat, 07 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://life.beyondrails.com/blog/2015/11/07/ruby-development-in-windows-revisited/</guid>
      <description>&lt;p&gt;Some time ago I &lt;a href=&#34;http://life.beyondrails.com/blog/2014/03/09/ruby-development-in-windows/&#34;&gt;wrote about how I set up my machine&lt;/a&gt; so I can program hassle-free in ruby while running Windows. It was more of a reminder to myself than anything, if I ever needed to set things up the same way again.&lt;/p&gt;

&lt;p&gt;Fast forward to 2015. When a colleague saw my workstation and realized I was running Windows, he was quite surprised and asked me how I was doing it. I thought of pointing him to my old blog post, but I felt that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It was outdated (the setup described was from 2012, written in 2014)&lt;/li&gt;
&lt;li&gt;It was incomplete (it&amp;rsquo;s just a checklist of what I&amp;rsquo;ve installed)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve improved on the whole setup since, and I thought it&amp;rsquo;s time to share the whole updated setup so that anyone else interested can benefit.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-magic-of-virtualization&#34;&gt;The Magic of Virtualization&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Pay no attention to that man behind the curtain!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikiquote.org/wiki/The_Wizard_of_Oz_%281939_film%29#The_Wizard&#34;&gt;The Wizard of Oz (1939 film)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;rsquo;s probably a bit misleading to say I do my ruby development &lt;em&gt;exclusively&lt;/em&gt; in Windows. It&amp;rsquo;s not because of the graphical user interface or the hardware support; I think Windows 10 had really been a great improvement over the past Windows versions. Support for peripherals (like graphic cards, multi-monitor setups, or just &lt;a href=&#34;link to follow soon on hackworkplay.com&#34;&gt;recently&lt;/a&gt; 4k TV/monitors) is simply heaps better than that of Ubuntu.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://life.beyondrails.com/images/IMG_20151109_002555_HDR.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;My home workstation: a 40&amp;#34; LG 4k display and a 1080p LG IPS display. The 1080p display is showing a webpage generated by a server running in the VM that is port forwarded to 1313. The 4k display is running sublime text and two instances of gnome-terminal. All three of these applications are using X11 forwarding.&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Rather, it&amp;rsquo;s because the Windows CLI is absolutely horrible. I&amp;rsquo;ve looked into some projects that attempt to alleviate the pain of the Windows CLI like &lt;a href=&#34;https://en.wikipedia.org/wiki/Windows_PowerShell&#34;&gt;PowerShell&lt;/a&gt; or &lt;a href=&#34;Console2&#34;&gt;Console2&lt;/a&gt; but for me, nothing still beats the power of a unix tty.&lt;/p&gt;

&lt;p&gt;The easiest way to combine the two worlds is to run Ubuntu inside a virtual machine, and expose the tools I needed to Windows. I get the hardware compatibility and peripheral support of Windows, while getting the workflow efficiencies of unix.&lt;/p&gt;

&lt;h2 id=&#34;write-once-run-anywhere&#34;&gt;Write Once, Run Anywhere&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Portability is for people who cannot write new programs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.oreilly.com/openbook/opensources/book/appa.html&#34;&gt;Linus Torvalds (tongue in cheek)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I chose to use apps that have been &amp;ldquo;portabilized&amp;rdquo; because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have many computers&lt;/li&gt;
&lt;li&gt;I like using all of them&lt;/li&gt;
&lt;li&gt;I prefer keeping my stuff synchronized&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m able to do this by using a portable versions of &lt;a href=&#34;http://www.vbox.me/&#34;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&#34;http://mobaxterm.mobatek.net/download-home-edition.html&#34;&gt;MobaXterm&lt;/a&gt; (an all-in-one remote terminal that comes with an X11 server). I keep my portable MobaXterm in a Dropbox folder; this allows me to sync all of my settings and bookmarks across all my devices that have Dropbox installed. For Virtualbox, I keep the files in a USB 3.0 portable drive.&lt;/p&gt;

&lt;p&gt;During the vbox setup, I prefer to separate my home drive and my os drive; this preference saved me a lot of time and effort in the recent past. Previously, I ran my vbox server with the full &lt;a href=&#34;https://ubuntugnome.org/&#34;&gt;Ubuntu Gnome&lt;/a&gt; gui (I use Ubuntu Gnome because they have the version of gnome-terminal that can reflow text, something that the Mac terminals have had since forever) full-screen. I&amp;rsquo;m now running a setup that is a basic ubuntu-server installation, with all my applications being X11 forwarded.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://life.beyondrails.com/images/11123892_391902314330773_325601457_n.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;My old office Workstation. I used to run the Ubuntu Desktop Environment as a full-screen application in Windows.&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Since I&amp;rsquo;ve separated out my os drive from my home drive, I can just create a new vbox with a fresh os drive and reuse the same home drive as before. All my local settings and repositories are immediately available.&lt;/p&gt;

&lt;h2 id=&#34;setting-it-all-up&#34;&gt;Setting it all up&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It takes these very simple-minded instructions&amp;ndash;&amp;ldquo;Go fetch a number, add it to this number, put the result there, perceive if it&amp;rsquo;s greater than this other number&amp;rsquo;&amp;ndash;but executes them at a rate of, let&amp;rsquo;s say, 1,000,000 per second. At 1,000,000 per second, the results appear to be magic.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20110926012452/http://www.playboy.com/magazine/playboy-interview-steve-jobs/2&#34;&gt;Steve Jobs (playboy magazine interview, on &amp;ldquo;what a computer is&amp;rdquo;)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m using a &lt;a href=&#34;http://www.vbox.me/&#34;&gt;portable version of VirtualBox&lt;/a&gt; and if you&amp;rsquo;ve made any VMs with VirtualBox before, it&amp;rsquo;s mostly the same experience. Currently I&amp;rsquo;m running &lt;a href=&#34;http://www.ubuntu.com/download/server&#34;&gt;Ubuntu Server 15.10&lt;/a&gt; but there&amp;rsquo;s nothing preventing you from running a full blown Ubuntu with all the Desktop Environment bells and whistles. I just prefer a more clean and precise installation that allows me to choose the exact packages I want and need.&lt;/p&gt;

&lt;h3 id=&#34;vm-creation&#34;&gt;VM Creation&lt;/h3&gt;

&lt;p&gt;I separated out my &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;os&lt;/code&gt; by installing them on different virtual hard drives. I gave the &lt;code&gt;os&lt;/code&gt; disk some 40GB of space that has fixed allocation, and the &lt;code&gt;home&lt;/code&gt; partition 80GB of space that has dynamic allocation. I figured that since the OS would be used a lot more than the user owned files, the tiny bit of extra performance I&amp;rsquo;ll get from pre-allocating the disk space on the physical hard drive would be worth it.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://life.beyondrails.com/images/ubuntu-plus-x11-forwarding.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Screenshot of my desktop running Windows and having an X11-forwarded gnome-terminal and sublime-text running inside a VM&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;I also gave the VM a ram size of 8GB. Since I&amp;rsquo;ll be installing ubuntu-server on the VM, 8GB is more than enough memory for my needs (since there&amp;rsquo;s no GUI or Desktop Environment). So far I haven&amp;rsquo;t had to increase the memory requirements, and I can comfortably run the VM alongside huge Excel sheets and some Steam games.&lt;/p&gt;

&lt;p&gt;If I do need to increase the memory size, it&amp;rsquo;s just a matter of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;shutting the VM down&lt;/li&gt;
&lt;li&gt;changing the memory size in the settings&lt;/li&gt;
&lt;li&gt;booting the VM back up&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;clipboard&#34;&gt;Clipboard&lt;/h3&gt;

&lt;p&gt;I set the clipboard sharing to be Bidirectional; that allows me to copy and paste to the VM and to the host seamlessly, as though they&amp;rsquo;re all just normal native applications on the host. I disable Drag&amp;rsquo;n&amp;rsquo;Drop though; I never really found much use for it.&lt;/p&gt;

&lt;h3 id=&#34;port-forwarding&#34;&gt;Port forwarding&lt;/h3&gt;

&lt;p&gt;As a web (and Ruby on Rails) developer I use custom ports to run my webservers to preview my work. Common ports I use are &lt;code&gt;3000&lt;/code&gt; (rails), &lt;code&gt;1313&lt;/code&gt; (hugo), and &lt;code&gt;22&lt;/code&gt; (SSH). It&amp;rsquo;s very easy to add more port forwards and better still, it&amp;rsquo;s almost instantaneous. There really isn&amp;rsquo;t much issue if you don&amp;rsquo;t setup your port forwards at this point; you can always add more later.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re running a full Desktop Environment, you can get away with not port-forwarding &lt;code&gt;22&lt;/code&gt; to the host. However, since I&amp;rsquo;ll be using X11 forwarding I need to have &lt;code&gt;22&lt;/code&gt; port-forwarded.&lt;/p&gt;

&lt;h3 id=&#34;shared-folders&#34;&gt;Shared folders&lt;/h3&gt;

&lt;p&gt;I like prefer my Dropbox folder to the VM instead of my full Documents folder. I feel that since I&amp;rsquo;m sharing files between two local machines anyway, I might as well share the files to all of my machines (through Dropbox).&lt;/p&gt;

&lt;p&gt;VirtualBox makes it really easy to share folders between the host and the client.&lt;/p&gt;

&lt;p&gt;Add yourself to the &lt;code&gt;vboxsf&lt;/code&gt; group to be able to access the shared folder without haveing superuser privileges:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo adduser `whoami` vboxsf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, you can either logout and login back again (which is annoying) or just force the OS to recognize the new members of the group:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo newgrp vboxsf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You now have access to the shared folder in &lt;code&gt;/media/sf_Dropbox/&lt;/code&gt; (if you followed my preference of sharing the Dropbox folder; otherwise the folder name will be different). I like doing a symlink of that shared folder to my home:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ln -s /media/sf_Dropbox/ ./
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That just makes everything easier since I have the same folder structure in my &lt;a href=&#34;link to follow soon&#34;&gt;Dell XPS 13 (2015)&lt;/a&gt; that almost exclusively runs on Ubuntu Gnome&lt;/p&gt;

&lt;h3 id=&#34;packages&#34;&gt;Packages&lt;/h3&gt;

&lt;p&gt;Chosen for minimalist reasons (except for gnome-terminal, which was chosen because it does text reflow)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;xvfb&lt;/li&gt;
&lt;li&gt;gnome-terminal&lt;/li&gt;
&lt;li&gt;rox-filer&lt;/li&gt;
&lt;li&gt;eog (eye of gnome)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additional quality of life packages
* sublime-text
* gnome-tweak-tool&lt;/p&gt;

&lt;h3 id=&#34;x11-forwarding&#34;&gt;X11 forwarding&lt;/h3&gt;

&lt;p&gt;Here comes the magic where I get seamless interaction between the VM applications, and the host&amp;rsquo;s native applications. In a nutshell, I run an XServer in Windows (currently Cygwin, but XMing will also do) and have it display the application that&amp;rsquo;s running inside the VM.&lt;/p&gt;

&lt;p&gt;Getting all the applications running would be a chore, so I turn to &lt;a href=&#34;http://mobaxterm.mobatek.net/download-home-edition.html&#34;&gt;MobaXterm&lt;/a&gt; to provide me with almost everything I need to do this setup. Instead of getting &lt;code&gt;PuTTY + XMing + configuration&lt;/code&gt; I just bookmark my SSH connection to the VM and that&amp;rsquo;s it.&lt;/p&gt;

&lt;p&gt;Note that for this to work you&amp;rsquo;ll need to have the SSH port in your VM (&lt;code&gt;22&lt;/code&gt; in my case) forwarded to the host.&lt;/p&gt;

&lt;h2 id=&#34;caveats&#34;&gt;Caveats&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Caveat emptor /ˌkævɛɑːt ˈɛmptɔr/ is Latin for &amp;ldquo;Let the buyer beware&amp;rdquo; (from caveat, &amp;ldquo;may he beware&amp;rdquo;, the subjunctive of cavere, &amp;ldquo;to beware&amp;rdquo; + emptor, &amp;ldquo;buyer&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Caveat_emptor&#34;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Although I&amp;rsquo;m very happy with the setup and have been using this setup for both my work and home workstations for years now, there are still a number of niggling issues that I haven&amp;rsquo;t quite resolved yet due to lack of time or lack of knowledge.&lt;/p&gt;

&lt;h3 id=&#34;response-lag&#34;&gt;Response lag&lt;/h3&gt;

&lt;p&gt;Depending on the application,&lt;/p&gt;

&lt;h3 id=&#34;multi-tasking-preview-in-windows-10&#34;&gt;Multi-tasking preview in Windows 10&lt;/h3&gt;

&lt;h3 id=&#34;hardware-accelerated-opengl&#34;&gt;Hardware accelerated OpenGL&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>Ruby Development in Windows</title>
      <link>http://life.beyondrails.com/blog/2014/03/09/ruby-development-in-windows/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://life.beyondrails.com/blog/2014/03/09/ruby-development-in-windows/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve done the unthinkable and I have a confession to make.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve switched my development machines to Windows.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the story of my heresy &amp;hellip; and my possible salvation.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-history-lesson&#34;&gt;A History Lesson&lt;/h3&gt;

&lt;p&gt;A couple of years ago my bosses realized that me and my colleague had been using an underpowered machine (mine was my personal Macbook Air mid 2010 and my colleague was a Dell XPS 13) and had offered to get me a new development machine.&lt;/p&gt;

&lt;p&gt;I would have wanted the latest and greatest, fully upgraded Macbook Pro but we had a budget. Actually we didn&amp;rsquo;t &amp;ndash; we were told that as one of the top value producers in the team, we can have (and should have) &lt;em&gt;any&lt;/em&gt; machine that we wanted &amp;ndash; but I didn&amp;rsquo;t want to push my luck. Besides, the servers I administer and target my development for are running Linux; I believe my development environment should closely match that of production to minimize bugs due to architectural mistmatches.&lt;/p&gt;

&lt;p&gt;So I got quite a nice beastly desktop with a nice graphics card (an i7 Sandy Bridge and 16GB of ram, SSD and a terabyte 7200rpm disk drive). Since most of my colleagues used Macs, I hackintoshed.&lt;/p&gt;

&lt;p&gt;It was smooth sailing but a bit inconvenient. I was stuck using 10.7 when everyone had upgraded to Mountain Lion. I had to decline all system updates and point patches. Then disaster struck, a driver was causing a kernel panic.&lt;/p&gt;

&lt;p&gt;I switched fully to Ubuntu 12.04 for about half a year. It was an okay experience.&lt;/p&gt;

&lt;p&gt;Then my colleague resigned. I cannibalized his desktop and found he ahd a really good graphics card (I couldn&amp;rsquo;t get that graphics card because it wasn&amp;rsquo;t hackintosh friendly). I installed it but my Ubuntu machine is having problems with my multi monitor setup with that card.&lt;/p&gt;

&lt;h3 id=&#34;trying-out-windows&#34;&gt;Trying Out Windows&lt;/h3&gt;

&lt;p&gt;So I decided to try out Windows. I thought I could still use cygwin, but it wasn&amp;rsquo;t an easy ride. After a full day of non-productivity just trying to get things running, I thought maybe I can try Virtualization.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I had:&lt;/p&gt;

&lt;pre&gt;
VirtualBox - Ubuntu 14.04
Shared folders
extension pack
guest additions
https://www.virtualbox.org/wiki/Downloads
inconsolata
&lt;/pre&gt;

&lt;p&gt;In order to make sure I&amp;rsquo;m able to access the network share, I had to add myself to the &lt;code&gt;vboxsf&lt;/code&gt; group:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo adduser xxx vboxsf
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>